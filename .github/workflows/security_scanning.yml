name: PostgreSQL Security Scanning

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sundays

jobs:
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install safety
        run: pip install safety

      - name: Run safety check
        run: safety check

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  docker-scan:
    name: Docker Image Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t postgres-security:test -f docker/Dockerfile .

      - name: Run Trivy vulnerability scanner on Docker image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'postgres-security:test'
          format: 'sarif'
          output: 'trivy-docker-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy Docker scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-docker-results.sarif'

  security-scan:
    name: Database Security Scan
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: db_dev
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U ${{ secrets.POSTGRES_USER }} -d db_dev"
          --health-interval 10s
          --health-timeout 3s
          --health-retries 10

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Security Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y sqlmap nmap

      - name: Run SQL Injection Scans
        run: |
          sqlmap -u "http://localhost/api/v1/users?search=test" --dbms=PostgreSQL --batch --level=5 --risk=3 --random-agent --technique=BEUST

      - name: Check for Unauthorized Access
        run: psql -h localhost -U ${{ secrets.POSTGRES_USER }} -d ${{ secrets.POSTGRES_DB }} -f test/pgTAP/04-security_test.sql

      - name: Run Port Scan
        run: |
          nmap -p 5432 -sV localhost

  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

  code-scanning:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: 'python, javascript'

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
