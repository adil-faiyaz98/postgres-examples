apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service-connector
  namespace: postgres-security
  labels:
    app: auth-service-connector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-service-connector
  template:
    metadata:
      labels:
        app: auth-service-connector
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: auth-service-connector
        image: postgres-auth-connector:latest
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
          privileged: false
        env:
        - name: AUTH_CONNECTOR_DB_HOST
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_HOST
        - name: AUTH_CONNECTOR_DB_PORT
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_PORT
        - name: AUTH_CONNECTOR_DB_NAME
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: database
        - name: AUTH_CONNECTOR_DB_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: username
        - name: AUTH_CONNECTOR_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: password
        - name: AUTH_CONNECTOR_AUTH_SERVICE_URL
          value: "http://postgres-auth-service:8080"
        - name: AUTH_CONNECTOR_SYNC_INTERVAL
          value: "60"
        - name: AUTH_CONNECTOR_JWT_EXPIRY
          value: "3600"
        - name: AUTH_CONNECTOR_LOG_LEVEL
          value: "INFO"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi
        livenessProbe:
          exec:
            command:
            - python3
            - -c
            - "import requests; requests.get('http://localhost:8080/health')"
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          exec:
            command:
            - python3
            - -c
            - "import requests; requests.get('http://localhost:8080/ready')"
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: log-volume
          mountPath: /var/log/postgres-security
      volumes:
      - name: tmp
        emptyDir: {}
      - name: log-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service-connector
  namespace: postgres-security
spec:
  selector:
    app: auth-service-connector
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  type: ClusterIP
