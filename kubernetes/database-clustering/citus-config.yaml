apiVersion: v1
kind: ConfigMap
metadata:
  name: citus-config
  namespace: postgres-security
data:
  citus-coordinator.conf: |
    # Citus Coordinator Configuration
    shared_preload_libraries = 'citus'
    citus.node_conninfo = 'sslmode=require'
    citus.use_secondary_nodes = 'never'
    citus.cluster_name = 'postgres-security-cluster'
    citus.shard_count = 32
    citus.shard_replication_factor = 2
    max_connections = 300
    max_prepared_transactions = 150
    
  citus-worker.conf: |
    # Citus Worker Configuration
    shared_preload_libraries = 'citus'
    citus.node_conninfo = 'sslmode=require'
    citus.use_secondary_nodes = 'never'
    citus.cluster_name = 'postgres-security-cluster'
    max_connections = 300
    max_prepared_transactions = 150
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: citus-coordinator
  namespace: postgres-security
spec:
  serviceName: citus-coordinator
  replicas: 1
  selector:
    matchLabels:
      app: citus-coordinator
  template:
    metadata:
      labels:
        app: citus-coordinator
    spec:
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsGroup: 999
        runAsNonRoot: true
      containers:
      - name: postgres
        image: citusdata/citus:11.3.0
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
          privileged: false
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 5432
          name: postgres
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - name: citus-config
          mountPath: /etc/postgresql/conf.d/citus.conf
          subPath: citus-coordinator.conf
        - name: certs
          mountPath: /etc/certs
        resources:
          requests:
            cpu: 1
            memory: 2Gi
          limits:
            cpu: 4
            memory: 8Gi
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 30
          periodSeconds: 15
      volumes:
      - name: citus-config
        configMap:
          name: citus-config
      - name: certs
        secret:
          secretName: postgres-certs
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "standard"
      resources:
        requests:
          storage: 100Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: citus-worker
  namespace: postgres-security
spec:
  serviceName: citus-worker
  replicas: 3
  selector:
    matchLabels:
      app: citus-worker
  template:
    metadata:
      labels:
        app: citus-worker
    spec:
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsGroup: 999
        runAsNonRoot: true
      containers:
      - name: postgres
        image: citusdata/citus:11.3.0
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
          privileged: false
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 5432
          name: postgres
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - name: citus-config
          mountPath: /etc/postgresql/conf.d/citus.conf
          subPath: citus-worker.conf
        - name: certs
          mountPath: /etc/certs
        resources:
          requests:
            cpu: 1
            memory: 2Gi
          limits:
            cpu: 4
            memory: 8Gi
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 30
          periodSeconds: 15
      volumes:
      - name: citus-config
        configMap:
          name: citus-config
      - name: certs
        secret:
          secretName: postgres-certs
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "standard"
      resources:
        requests:
          storage: 100Gi
---
apiVersion: v1
kind: Service
metadata:
  name: citus-coordinator
  namespace: postgres-security
  labels:
    app: citus-coordinator
spec:
  selector:
    app: citus-coordinator
  ports:
  - port: 5432
    targetPort: 5432
    name: postgres
---
apiVersion: v1
kind: Service
metadata:
  name: citus-worker
  namespace: postgres-security
  labels:
    app: citus-worker
spec:
  selector:
    app: citus-worker
  ports:
  - port: 5432
    targetPort: 5432
    name: postgres
  clusterIP: None
