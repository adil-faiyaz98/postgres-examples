apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-security
  namespace: postgres-security
spec:
  serviceName: postgres-security
  replicas: 1
  selector:
    matchLabels:
      app: postgres-security
  template:
    metadata:
      labels:
        app: postgres-security
    spec:
      securityContext:
        fsGroup: 999
      containers:
      - name: postgres
        image: yourorg/postgres-security:latest  # Replace with your image name
        imagePullPolicy: Always
        ports:
        - containerPort: 5432
          name: postgres
        envFrom:
        - secretRef:
            name: postgres-credentials
        - configMapRef:
            name: postgres-security-config
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
          subPath: pgdata
        - name: postgres-config
          mountPath: /etc/postgresql/postgresql.conf
          subPath: postgresql-security.conf
        - name: postgres-config
          mountPath: /etc/postgresql/pg_hba.conf
          subPath: pg_hba.conf
        - name: postgres-certs
          mountPath: /etc/certs
          readOnly: true
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - pg_isready -U postgres -h localhost
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - pg_isready -U postgres -h localhost
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          exec:
            command:
            - sh
            - -c
            - pg_isready -U postgres -h localhost
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      volumes:
      - name: postgres-config
        configMap:
          name: postgres-security-config
      - name: postgres-certs
        secret:
          secretName: postgres-tls-certs
          defaultMode: 0400
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: gp2  # Use your cluster's storage class
      resources:
        requests:
          storage: 20Gi 