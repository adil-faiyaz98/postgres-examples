apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: postgres-aws-secrets
  namespace: postgres-security
spec:
  provider: aws
  parameters:
    objects: |
      - objectName: "postgres-credentials"
        objectType: "secretsmanager"
        objectAlias: "postgres-credentials"
        jmesPath:
          - path: username
            objectAlias: POSTGRES_USER
          - path: password
            objectAlias: POSTGRES_PASSWORD
          - path: database
            objectAlias: POSTGRES_DB
          - path: host
            objectAlias: POSTGRES_HOST
          - path: port
            objectAlias: POSTGRES_PORT
  secretObjects:
    - secretName: postgres-credentials
      type: Opaque
      data:
        - objectName: POSTGRES_USER
          key: username
        - objectName: POSTGRES_PASSWORD
          key: password
        - objectName: POSTGRES_DB
          key: database
        - objectName: POSTGRES_HOST
          key: host
        - objectName: POSTGRES_PORT
          key: port
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: postgres-sa
  namespace: postgres-security
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::123456789012:role/postgres-secrets-role"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-reader
  namespace: postgres-security
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-secrets
  namespace: postgres-security
subjects:
- kind: ServiceAccount
  name: postgres-sa
  namespace: postgres-security
roleRef:
  kind: Role
  name: secret-reader
  apiGroup: rbac.authorization.k8s.io
