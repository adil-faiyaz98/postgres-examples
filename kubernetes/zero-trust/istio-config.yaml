apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: postgres-istio-config
spec:
  profile: default
  components:
    egressGateways:
    - name: istio-egressgateway
      enabled: true
    ingressGateways:
    - name: istio-ingressgateway
      enabled: true
    pilot:
      enabled: true
  meshConfig:
    enableTracing: true
    accessLogFile: "/dev/stdout"
    enableAutoMtls: true
    defaultConfig:
      proxyMetadata:
        ISTIO_META_DNS_CAPTURE: "true"
        ISTIO_META_DNS_AUTO_ALLOCATE: "true"
    outboundTrafficPolicy:
      mode: REGISTRY_ONLY
  values:
    global:
      proxy:
        privileged: false
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
      logging:
        level: "default:info"
      mtls:
        enabled: true
      imagePullPolicy: Always
---
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: default
  namespace: postgres-security
spec:
  mtls:
    mode: STRICT
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: postgres-authz
  namespace: postgres-security
spec:
  selector:
    matchLabels:
      app: postgres-security
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/postgres-security/sa/postgres-sa"]
    - source:
        namespaces: ["monitoring"]
    to:
    - operation:
        ports: ["5432"]
---
apiVersion: networking.istio.io/v1alpha3
kind: ServiceEntry
metadata:
  name: external-postgres-services
  namespace: postgres-security
spec:
  hosts:
  - "*.amazonaws.com"
  - "*.cloudwatch.amazonaws.com"
  - "*.kms.amazonaws.com"
  - "*.s3.amazonaws.com"
  ports:
  - number: 443
    name: https
    protocol: HTTPS
  resolution: DNS
  location: MESH_EXTERNAL
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: postgres-destination-rule
  namespace: postgres-security
spec:
  host: "postgres-security.postgres-security.svc.cluster.local"
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
    connectionPool:
      tcp:
        maxConnections: 100
        connectTimeout: 30ms
      http:
        http2MaxRequests: 1000
        maxRequestsPerConnection: 10
    outlierDetection:
      consecutive5xxErrors: 5
      interval: 30s
      baseEjectionTime: 30s
